[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "onnx-doctor"
version = "0.0.1a1"
dependencies = [
    "onnx>=1.16",
    "onnxrewriter",
]
description = "Extensible and beautiful ONNX checker"
keywords = []
authors = [
  { name = "Justin Chu", email = "justinchuby@users.noreply.github.com" },
]
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE" }
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "License :: OSI Approved :: MIT License",
]

[project.urls]
Documentation = "https://github.com/justinchuby/onnx-doctor#readme"
Issues = "https://github.com/justinchuby/onnx-doctor/issues"
Source = "https://github.com/justinchuby/onnx-doctor"

[tool.setuptools.packages.find]
include = ["onnxdoctor*"]

[tool.pydocstyle]
convention = "google"

[tool.ruff]
target-version = "py38"
lint.select = [
    "A",
    "ARG",
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "D", # pydocstyle
    "E", # pycodestyle
    "F", # Pyflakes
    "G", # flake8-logging-format
    "ICN",
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "NPY", # modern numpy
    "PERF", # Perflint
    "RUF", # Ruff-specific rules
    "T10", # flake8-debugger
    "TID252", # Disallow relative imports
    "UP", # pyupgrade
    "W", # pycodestyle
    "YTT", # flake8-2020
]
lint.ignore = [
    "E501", # Line length. Not enforced because black will handle formatting
    "PLR0913", # Too many arguments
]

[tool.ruff.lint.pydocstyle]
convention = "google"
